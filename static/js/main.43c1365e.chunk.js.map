{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Square","_ref","value","onSquareClick","React","createElement","Fragment","className","onClick","Board","props","squares","setSquares","useState","Array","fill","isXNext","setIsXNext","winner","calculateWinner","status","handleClick","i","nextSquares","slice","lines","length","a","b","c","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.43c1365e.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\n// https://upload.wikimedia.org/wikipedia/commons/thumb/3/32/Tic_tac_toe.svg/1200px-Tic_tac_toe.svg.png\n\nfunction Square({ value, onSquareClick }) {\n  return (\n    <>\n      <button className='square' onClick={onSquareClick}>{value}</button>\n    </>);\n}\n\n/*Game Board Component*/\nfunction Board(props) {\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [isXNext, setIsXNext] = useState(true);\n\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) { status = \"Winner: \" + winner }\n  else { status = \"Next Player: \" + (isXNext ? \"X\" : \"O\") };\n\n  function handleClick(i) {\n    // return if the square is filled already\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (isXNext) {\n      nextSquares[i] = 'X';\n    }\n    else {\n      nextSquares[i] = 'O';\n    }\n    setSquares(nextSquares);\n    setIsXNext(!isXNext);\n  }\n\n  return (\n    <>\n      <h3>Tik Tok Toe Game Now</h3>\n      <div className='status'>{status}</div>\n      <div className=\"board-row\">\n        <Square value={squares[0]} onSquareClick={() => handleClick(0)} />\n        <Square value={squares[1]} onSquareClick={() => handleClick(1)} />\n        <Square value={squares[2]} onSquareClick={() => handleClick(2)} />\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[3]} onSquareClick={() => handleClick(3)} />\n        <Square value={squares[4]} onSquareClick={() => handleClick(4)} />\n        <Square value={squares[5]} onSquareClick={() => handleClick(5)} />\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[6]} onSquareClick={() => handleClick(6)} />\n        <Square value={squares[7]} onSquareClick={() => handleClick(7)} />\n        <Square value={squares[8]} onSquareClick={() => handleClick(8)} />\n      </div>\n    </>\n  );\n}\n\n// Tic Toc Toe Game\nfunction App() {\n  // const [value, setValue] = useState(0);\n  return (\n    <>\n      <header className='App-header'>\n        <Board />\n      </header>\n    </>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2], [3, 4, 5], [6, 7, 8],\n    [0, 3, 6], [1, 4, 7], [2, 5, 8],\n    [0, 4, 8], [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c])\n      return squares[a];\n  }\n  return null;\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}